{
  "sum-two-ints": {
    "title": "Sum Two Integers",
    "description": "Created a function that returns the sum of two integers",
    "instructions": "Create a function that takes in two arguments (num1 & num2 that will both be integers) and returns a number that is the sum of the two integers provided.",
    "testScriptName": "sumTwoIntsTestScript",
    "startingCode": "const sum = (num1, num2) => {\n  // Add Code Below\n\n\n  // Add Code Above\n}",
    "testCriteria": [
      "User created a function called sum",
      "function returns a number",
      "sum(1, 2) returns 3",
      "sum(5, 10) returns 15",
      "sum(-1, -4 returns -5"
    ]
  },
  "sort-array-ints": {
    "title": "Sort Array Of Integers",
    "description": "Create a function that returns a sorted array of integers",
    "instructions": "Create a function that takes in one argument (an array of integers) and a new array with those same integers sorted from least to greatest.",
    "testScriptName": "sortArrayIntsTestScript",
    "startingCode": "const sortArr = (numArr) => {\n  // Add Code Below\n\n\n  // Add Code Above\n}",
    "testCriteria": [
      "User created a function called sortArr",
      "sortArr([1, 2, 6, 4, 2]) returns [1, 2, 2, 4, 6]",
      "sortArr([10, -3, 2, -1, 7, 9]) returns [-3, -1, 2, 7, 9, 10]",
      "sortArr([-1, 1000, 10, 22, -22, 3]) returns [-22, -1, 3, 10, 22, 1000]"
    ]
  },
  "largest-num-in-array": {
    "title": "Find Largest Number",
    "description": "Create a function that returns a the largest number from an array of integers",
    "instructions": "Given a function that takes in an array of integers, return the largest number from that array.",
    "testScriptName": "largestNumInArrayTestScript",
    "startingCode": "const largestNum = (numArr) => {\n  // Add Code Below\n\n\n  // Add Code Above\n}",
    "testCriteria": [
      "User created a function called largestNum",
      "function return a number",
      "largestNum([1, 8, 10, 5, 12]) returns 12",
      "largestNum([-4, 1, 80, 2, 1]) returns 80",
      "largestNum([-5, -2, -1, -3, -20]) returns -1"
    ]
  },
  "count-the-vowels": {
    "title": "Count The Vowels",
    "description": "Create a function that counts the number of vowels there are in a string.",
    "instructions": "Given a function that takes in a string, return the number of vowels that occur in that string.  Vowels will be a,e,i,o,u, and y.  Make sure to look for upper and lower case letters.",
    "testScriptName": "countTheVowelsTestScript",
    "startingCode": "const vowelCount = (str) => {\n  // Add Code Below\n\n\n  // Add Code Above\n}",
    "testCriteria": [
      "User created a function called vowelCount",
      "vowelCount returns a number",
      "vowelCount('This is a test sentence.') returns 7",
      "vowelCount('If you have not checked out FreeCodeCamp, you should. It is Awesome!!!') returns 27",
      "vowelCount('THIS IS UPPER CASE. this is lowercase.') returns 12"
    ]
  },
  "sort-the-days": {
    "title": "Sort The Days",
    "description": "Create a function that sorts the given days of the week.",
    "instructions": "Create a function that takes in a string of days seperated by commas (ex. 'mon,wed,tues').  Return a string of days sorted with Monday being the start of the week and sunday being the last. The possible values in the provided string are 'mon', 'tues', 'wed', 'thurs', 'fri', 'sat', 'sun'.",
    "testScriptName": "sortTheDaysTestScript",
    "startingCode": "const sortDays = (dayStr) => {\n  // Add Code Below\n\n\n  // Add Code Above\n}",
    "testCriteria": [
      "User created a function called sortDays",
      "Function returns a string",
      "sortDays('mon,wed,tues,sat') returns 'mon,tues,wed,sat'",
      "sortDays('sun,sat,fri,thurs,wed,tues,mon') returns 'mon,tues,wed,thrus,fri,sat,sun'",
      "sortDays('wed,tues,sat,fri') returns 'tues,wed,fri,sat'"
    ]
  },

  "find-the-index-1": {
    "title": "Find the Index (Level 1)",
    "description": "Create a function that returns the index of a give value in an array.",
    "instructions": "Create a function that takes in two arguments, an array and a target value. The function will return the index of that value in the array. If the target value is not in the array or the array is empty, return -1.",
    "testScriptName": "findTheIndex1TestScript",
    "startingCode": "const findIndex = (sourceArr, targetValue) => {\n  // Add Code Below\n\n\n  // Add Code Above\n}",
    "testCriteria": [
      "User created a function called findIndex",
      "Function returns a number",
      "findIndex([0, 2, 10, -10, 3], -10) returns 3",
      "findIndex(['testing', 'test', 'tester', 'tested'], 'test') returns 1",
      "findIndex([], 'something') returns -1",
      "findIndex(['apple', 'orange', 'grape'], 'pineapple') returns -1"
    ]
  }
}
